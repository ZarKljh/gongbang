// app/layout.tsx (또는 app/layout.jsx)

import type { Metadata } from 'next'
import { Geist, Geist_Mono } from 'next/font/google'
import './globals.css'
import Link from 'next/link'
import ClientNav from "./components/ClientNav";
import ReactQueryProviders from '@/app/utils/ReactQueryProviders'
import Script from "next/script";

const geistSans = Geist({
    variable: '--font-geist-sans',
    subsets: ['latin'],
})

const geistMono = Geist_Mono({
    variable: '--font-geist-mono',
    subsets: ['latin'],
})

export const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
}

export default function RootLayout({

  children,
}: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="ko">
      <head>
                {/* Daum 주소 검색 API 스크립트 추가  -  이승운 */}
                <script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js" />
            </head>
      <body>
        {/* 1) Chatling 설정: embed.js보다 먼저 실행되어야 함 */}
        <Script
          id="chatling-config"
          strategy="beforeInteractive"
          dangerouslySetInnerHTML={{
            __html: `window.chtlConfig = { chatbotId: "9369741529" };`,
          }}
        />

        {/* 2) Chatling 로더 */}
        <Script
          id="chatling-embed"
          strategy="afterInteractive"
          src="https://chatling.ai/js/embed.js"
          data-id="9369741529"
          async
        />

        <nav>
         <Link href="/">홈 </Link>
                    <Link href="/product/list">상품 </Link>
                    <Link href="/theme">테마목록 </Link>
                    <Link href="/review">리뷰</Link>
                    <Link href="/personal">마이페이지</Link>
                    <Link href="/auth/login">로그인</Link>
                    <Link href="/auth/signup">회원가입</Link>
                    <ClientNav />
                    <Link
                      href="/support/faq"
                      className="rounded-lg border px-3 py-1.5 text-sm hover:bg-slate-50"
                      prefetch
                    >
                    F&Q
                    </Link>
                </nav>
                <ReactQueryProviders>{children}</ReactQueryProviders>
      </body>
    </html>
  );

}
